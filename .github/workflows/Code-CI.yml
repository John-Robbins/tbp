# My attempt at creating the tbp CI action.
# Use this tool to lint files: https://rhysd.github.io/actionlint/
name: Code CI

# Only trigger on the main branch
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab, which is
  # kind of important for developing this action as well as testing on any
  # branch.
  workflow_dispatch:

jobs:

  # The first job is to type check and  is to type check and lint the project.
  # I'll do that on Ubuntu and won't proceed if this fails.
  lint-types-job:
    name: "Type and Lint Checks"
    runs-on: ubuntu-latest
    steps:
      # You have to love copying and pasting the same 11 lines into each job.
      # I tried to make these a reusable job, but GitHub Actions wants to
      # force you to ARY: Always Repeat Yourself. ðŸ˜¹ðŸ˜¹
      - name: "Checkout Code"
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'
      - name: "Install Dependencies"
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[dev]
      # The unique part starts here.
      - name: "Check Types"
        run: mypy --config-file pyproject.toml src/ tests/
      - name: Ruff Lint
        run: ruff check --config ./pyproject.toml src/ tests/
      - name: Pylint Lint
        run: pylint --rcfile pyproject.toml src/ tests/


  test-cov-job:
    name: "Tests and Coverage"
    runs-on: ${{ matrix.os }}
    needs: lint-types-job
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12"]
    steps:
    # Repeat ourselves again.
    - name: "Checkout Code"
      uses: actions/checkout@v4
    - name: "Set up Python ${{ matrix.python-version }}"
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: "Install Dependencies"
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[dev]
    # The unique part of this job.
    - name: "Test and Coverage"
        # Generate the coverage data for this operating system.
        # The default name for the file is ".coverage", which is the same for
        # all operating systems and makes combining them later a little hard.
        # This uses the COVERAGE_FILE environment variable to give each their
        # own name.
      env:
        COVERAGE_FILE: ".coverage.${{ matrix.os }}"
      run: |
        coverage run -m pytest --maxfail=1 -console_output_style=classic --junit-xml=.test-results.xml
    - name: "Count Unit Tests"
        # Count the number of unit tests for the badge.
        # Note, I had no idea bash could not handle spaces arounf the '=' in
        # the export command.
      if: runner.os == 'Linux'
      run: |
        export TOTAL_UNIT_TESTS=$(python ./tools/num_pytest_tests.py .test-results.xml)
        echo "total_unit_tests=$TOTAL_UNIT_TESTS" >> $GITHUB_ENV
        echo "### Total Unit Tests: ${TOTAL_UNIT_TESTS}" >> $GITHUB_STEP_SUMMARY
    - name: "Upload Coverage Data"
        # Upload the coverage data for the coverage-job
      uses: actions/upload-artifact@v4
      with:
        name: covdata-${{ matrix.os }}
        path: .coverage*



