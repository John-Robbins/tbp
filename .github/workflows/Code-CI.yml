# My attempt at creating the tbp CI action.
# Use this tool to lint files: https://rhysd.github.io/actionlint/
name: Code CI

# Only trigger on the main branch
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab, which is
  # kind of important for developing this action as well as testing on any
  # branch.
  workflow_dispatch:

jobs:

  # The first job is to type check and  is to type check and lint the project.
  # I'll do that on Ubuntu and won't proceed if this fails.
  # lint-types-job:
  #   name: Type and Lint Checks
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4
  #     - name: Set up Python 3.12
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.12"
  #         cache: 'pip'
  #     - name: Install Dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install .[dev]
  #     - name: Check Types
  #       run: mypy --config-file pyproject.toml src/ tests/
  #     - name: Ruff Lint
  #       run: ruff check --config ./pyproject.toml src/ tests/
  #     - name: Pylint Lint
  #       run: pylint --rcfile pyproject.toml src/ tests/



  # I really want to break this up into multiple jobs, but I have no idea how.
  setup-python-job:
    name: Setup-tbp
    uses: John-Robbins/tbp/.github/workflows/Setup-tbp.yml@real-build
    with:
      executes_on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ["3.12"]

  show-version-job:
    name: Show Version on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
    - name: Display OS version
      run: |
        python -c 'import platform; print(f"{platform.system()} - {platform.release()}")'

    # - name: Install Dependencies
    #   # I'm not sure if I need the 'python -m pip install --editable .'
    #   # there, but I'll play it safe.
    #   run: |
    #     python -m pip install --upgrade pip
    #     python -m pip install .[dev]
    #     python -m pip install --editable .
    # - name: Check Types
    #   run: mypy --config-file pyproject.toml src/ tests/
    # - name: Ruff Lint
    #   run: ruff check --config ./pyproject.toml src/ tests/
    # - name: Pylint Lint
    #   run: pylint --rcfile pyproject.toml src/ tests/
    # - name: Test and Coverage
    #   run: |
    #     coverage run -m pytest --maxfail=1 -console_output_style=classic --junit-xml=.test-results.xml
    #     coverage report --precision=2 --show-missing --sort=Cover --skip-covered



